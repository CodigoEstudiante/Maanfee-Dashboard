@page "/Users/CrudateView/{IdUser}"
@inherits _BaseView

@if (!IsLoaded)
{
	<Overlay />
}
else
{
	<EditForm OnValidSubmit="OnSubmit" EditContext="@EditContext">
		<DataAnnotationsValidator />
		<MudCard>
			<MudCardHeader>
				<MudText Typo="Typo.button" Color="Color.Primary">
					@DashboardResource.StringUser
				</MudText>
			</MudCardHeader>
			<MudDivider DividerType="DividerType.FullWidth" />
			<MudCardContent>
				<MudTabs ActivePanelIndexChanged="(TabIndex) => TabIndexChanged(TabIndex)" @ref="Tab" Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-2">
					<MudTabPanel Text="@DashboardResource.StringPersonalInformation">
						<MudGrid>
							<MudItem md="3">
								<MudTextField @bind-Value="SubmitUserViewModel.UserName" Variant="Variant.Outlined"
										  For="@(() => SubmitUserViewModel.UserName)" Label="@DashboardResource.StringUserName"
										  Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Person" />
							</MudItem>
							<MudItem md="3">
								<MudTextField @bind-Value="SubmitUserViewModel.Password" Variant="Variant.Outlined"
										  Adornment="Adornment.Start" AdornmentIcon="@Icons.Filled.Password"
										  For="@(() => SubmitUserViewModel.Password)" Label="@DashboardResource.StringPassword" />
							</MudItem>
							<MudItem md="3">
								<MudTextField @bind-Value="SubmitUserViewModel.PersonalCode" Variant="Variant.Outlined"
										  Adornment="Adornment.Start" AdornmentIcon="@Icons.Filled.Bolt"
										  For="@(() => SubmitUserViewModel.PersonalCode)" Label="@DashboardResource.StringPersonalCode" />
							</MudItem>
							<MudItem md="3">
								<MudTextField @bind-Value="SubmitUserViewModel.FirstName" Variant="Variant.Outlined"
										  Adornment="Adornment.Start" AdornmentIcon="@Icons.Filled.Fingerprint"
										  For="@(() => SubmitUserViewModel.FirstName)" Label="@DashboardResource.StringFirstName" />
							</MudItem>
							<MudItem md="3">
								<MudTextField @bind-Value="SubmitUserViewModel.LastName" Variant="Variant.Outlined"
										  Adornment="Adornment.Start" AdornmentIcon="@Icons.Filled.Group"
										  For="@(() => SubmitUserViewModel.LastName)" Label="@DashboardResource.StringLastName" />
							</MudItem>
							<MudItem md="3">
								<MudTextField @bind-Value="SubmitUserViewModel.FatherName" Variant="Variant.Outlined"
										  Adornment="Adornment.Start" AdornmentIcon="@Icons.Filled.AssignmentInd"
										  For="@(() => SubmitUserViewModel.FatherName)" Label="@DashboardResource.StringFatherName" />
							</MudItem>
							<MudItem md="3">
								<MudTextField @bind-Value="SubmitUserViewModel.NationalCode" Variant="Variant.Outlined"
										  Adornment="Adornment.Start" AdornmentIcon="@Icons.Filled.PersonalInjury"
										  For="@(() => SubmitUserViewModel.NationalCode)" Label="@DashboardResource.StringNationalCode" />
							</MudItem>
							<MudItem md="3">
								<MudTextField @bind-Value="SubmitUserViewModel.PhoneNumber" Variant="Variant.Outlined"
										  Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Smartphone"
										  For="@(() => SubmitUserViewModel.PhoneNumber)" Label="@DashboardResource.StringPhoneNumber" />
							</MudItem>
							<MudItem md="3">
								<MudSelect T="DropDownGenderViewModel" Label="@DashboardResource.StringGender" Variant="Variant.Outlined"
									   Clearable="true" @bind-Value="SubmitUserViewModel.Gender"
									   For="@(() => SubmitUserViewModel.Gender)">
									@foreach (var item in Genders)
									{
										<MudSelectItem Value="@item">@item.Sex</MudSelectItem>
									}
								</MudSelect>
							</MudItem>
							<MudItem md="3">
								<MudSelect T="DropDownRoleViewModel" Label="@DashboardResource.StringRole" Variant="Variant.Outlined"
									   Clearable="true" @bind-Value="SubmitUserViewModel.Role"
									   For="@(() => SubmitUserViewModel.Role)">
									@foreach (var item in Roles)
									{
										<MudSelectItem Value="@item">@item.Name</MudSelectItem>
									}
								</MudSelect>
							</MudItem>
							<MudItem md="6">
								<MudSelect Label="@DashboardResource.StringPersonalPost" Variant="Variant.Outlined"
									   Clearable MultiSelection="true" SelectAll="true"
									   SelectAllText="@DashboardResource.StringSelectAll"
									   MultiSelectionTextFunc="@(new Func<List<string>, string>(GetDepartmentMultiSelectionText))"
									   @bind-SelectedValues="SubmitUserViewModel.DepartmentPersonalValues"
									   @bind-Value="SubmitUserViewModel.IdDepartment"
									   For="@(() => SubmitUserViewModel.IdDepartment)">
									@foreach (var item in Departments)
									{
										<MudSelectItem Value="@item?.Id">@item?.Title</MudSelectItem>
									}
								</MudSelect>
							</MudItem>
							<MudItem md="6">
								<MudSelect Label="@DashboardResource.StringManagementPost" Variant="Variant.Outlined"
									   Clearable MultiSelection="true" SelectAll="true"
									   SelectAllText="@DashboardResource.StringSelectAll"
									   MultiSelectionTextFunc="@(new Func<List<string>, string>(GetDepartmentMultiSelectionText))"
									   @bind-SelectedValues="SubmitUserViewModel.DepartmentManagementValues"
									   @bind-Value="SubmitUserViewModel.IdDepartment"
									   For="@(() => SubmitUserViewModel.IdDepartment)">
									@foreach (var item in Departments)
									{
										<MudSelectItem Value="@item?.Id">@item?.Title</MudSelectItem>
									}
								</MudSelect>
							</MudItem>
							<MudItem md="6">
								<MudSelect Label="@DashboardResource.StringGroup" Variant="Variant.Outlined"
									   Clearable MultiSelection="true" SelectAll="true"
									   SelectAllText="@DashboardResource.StringSelectAll"
									   MultiSelectionTextFunc="@(new Func<List<string>, string>(GetGroupMultiSelectionText))"
									   @bind-SelectedValues="SubmitUserViewModel.GroupValues"
									   @bind-Value="SubmitUserViewModel.IdGroup"
									   For="@(() => SubmitUserViewModel.IdGroup)">
									@foreach (var item in Groups)
									{
										<MudSelectItem Value="@item?.Id">@item?.Title</MudSelectItem>
									}
								</MudSelect>
							</MudItem>
						</MudGrid>
					</MudTabPanel>
					<MudTabPanel Text="@DashboardResource.StringAvatar">
						<MudContainer>
							<MudGrid Justify="Justify.Center">
								<MudItem md="4" xs="12"></MudItem>
								<MudItem md="4" xs="12" Class="mud-text-align-center my-auto">
									<MudAvatar Image="@("data:image/png;base64," + Avatar)" Size="Size.Large" Class="ma-5" />
									<div>
										<InputFile id="fileInput" OnChange="OnInputFileChange" hidden accept=".jpg, .jpeg, .png" />
										<MudButton HtmlTag="label"
											   Variant="Variant.Filled"
											   Color="Color.Primary"
											   StartIcon="@Icons.Filled.CloudUpload"
											   for="fileInput">
											@DashboardResource.StringUploadFiles
										</MudButton>
										<MudButton Color="Color.Error" OnClick="Delete" Variant="Variant.Filled">
											<MudIcon Icon="@Icons.Material.Filled.DeleteForever" Color="Color.Surface" Class="mx-1" />
											@DashboardResource.StringDelete
										</MudButton>
									</div>
								</MudItem>
								<MudItem md="4" xs="12"></MudItem>
							</MudGrid>
						</MudContainer>
					</MudTabPanel>
				</MudTabs>
				<MudPaper Class="pa-3 my-3 ActionColor" Elevation="3" Outlined="true" Square="true">
					<MudGrid Spacing="1">
						<MudItem>
							<MudButton id="btn" Disabled="@IsProcessing" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Tertiary">
								@if (IsProcessing)
								{
									<MudProgressCircular Size="Size.Small" Indeterminate="true" Class="ms-n1" />
									<MudText Class="ms-2">@DashboardResource.StringProcessing</MudText>
								}
								else
								{
									<MudIcon Icon="@Icons.Material.Filled.Save" Color="Color.Surface" Class="mx-1" />
									<MudText>@DashboardResource.StringSave</MudText>
								}
							</MudButton>
						</MudItem>
						<MudItem>
							<MudButton Link="/Users/IndexView" Variant="Variant.Filled" Color="Color.Success" StartIcon="@Icons.Material.Filled.PlaylistAddCheck" IconColor="Color.Surface">@DashboardResource.StringList</MudButton>
						</MudItem>
					</MudGrid>
				</MudPaper>
			</MudCardContent>
		</MudCard>
	</EditForm>
}
